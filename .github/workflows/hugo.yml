# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Server

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.124.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
      
      - name: rsync deployments
        # You may pin to the exact commit or the version.
        # uses: contention/rsync-deployments@10f98a8726e6760601d8818ea6ff812f87bf8a97
        uses: contention/rsync-deployments@v2.0.0
        with:
          # Initial/required rsync flags
          # flags: 
          # Exclude flags and directory pairs
          # excludes: 
          # The server user
          user: ${{secrets.DEPLOY_USER}}
          # The deployment target
          host: ${{secrets.DEPLOY_HOST}}
          # The local path to sync
          localpath: ./public/*
          # The remote path to sync
          remotepath: ./
          # The private key
          deploy_key: ${{secrets.DEPLOY_KEY}}
                

        

